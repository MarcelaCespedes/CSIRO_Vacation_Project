shiny::runApp('C:/Users/lucin/Dropbox/VacationWork2020&2021/FINAL_APP_FOLDER')
shiny::runApp('C:/Users/lucin/OneDrive/Desktop/GitHub/CSIRO_Vacation_Project/Synthetic_app')
# LOAD ALL FUNCTIONS AND SOURCES
load("simulated_data.RData")
setwd("C:/Users/lucin/OneDrive/Desktop/GitHub/CSIRO_Vacation_Project/Synthetic_app")
# LOAD ALL FUNCTIONS AND SOURCES
load("simulated_data.RData")
LEGEND_1 <- list(
title = list(text = "<b>ATN Burnham Classification</b>"),
font = list(
family = "sans-serif",
size = 12,
color = "#000"),
bgcolor = "#E2E2E2",
bordercolor = "black",
borderwidth = 1.25,
x = 1,
y = 0.5)
LEGEND_2 <- list(
title = list(text = "<b>ATN Clifford Classification</b>"),
font = list(
family = "sans-serif",
size = 12,
color = "#000"),
bgcolor = "#E2E2E2",
bordercolor = "black",
borderwidth = 1.25,
x = 1,
y = 0.5)
################# GROUP 1 LABELS ###############
axx <- list(
title = "CSF AB1-42 pg/mL"
)
axy <- list(
title = "CSF p-Tau pg/mL"
)
axz <- list(
title = "CSF t-Tau pg/mL"
)
################# GROUP 2 LABELS ###############
axx2 <- list(
title = "Hippocampus mL<sup>3</sup>"
)
axy2 <- list(
title = "CSF p-Tau pg/mL"
)
axz2 <- list(
title = "Centiloid"
)
AdditionalATN <- function(dat, xinput,yinput,zinput,
XCUT,YCUT,ZCUT, leg, xax,yax,zax){
dat$SCATTERCOL <- rep("unselected", nrow(dat))
for (i in 1:nrow(dat)){
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD"){
dat$SCATTERCOL[i] <- "AD meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change"){
dat$SCATTERCOL[i] <- "Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT &&dat$Burnham_class == "Non-AD pathological Change"){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers"){
dat$SCATTERCOL[i] <- "Normal AD Biomarkers meeting all cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "AD")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")){
dat$SCATTERCOL[i] <- "AD meeting 2 cut offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")){
dat$SCATTERCOL[i] <- "Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Non-AD pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")){
dat$SCATTERCOL[i] <- "Normal AD Biomarker meeting 2 cut-offs"
}
}
dat$SCATTERCOL <- factor(dat$SCATTERCOL, levels = c("unselected",
"AD meeting all cut-offs",
"Pathological Change meeting all cut-offs",
"Non-AD Pathological Change meeting all cut-offs",
"Normal AD Biomarkers meeting all cut-offs",
"AD meeting 2 cut offs",
"Pathological Change meeting 2 cut-offs",
"Non-AD Pathological Change meeting 2 cut-offs",
"Normal AD Biomarker meeting 2 cut-offs"))
df_mesh_1 <- data.frame(X_VAL = c(XCUT,  XCUT,  min(xinput),    min(xinput),    XCUT,   XCUT,   min(xinput),   min(xinput)),
Y_VAL = c(YCUT  ,max(yinput),    YCUT  ,  max(yinput),    YCUT , max(yinput),   YCUT , max(yinput)),
Z_VAL = c(ZCUT  , ZCUT  , ZCUT  , ZCUT  , max(zinput),  max(zinput),  max(zinput),  max(zinput)),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
# Make apoe4 a factor
cube <- plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = dat,
x = ~xinput,
y = ~yinput,
z = ~zinput,
color = ~SCATTERCOL,
colors = c('gray', "firebrick", "darkorange", "gold", "forestgreen","hotpink", "aquamarine", "blueviolet", "darkorchid")) %>%
add_trace(type = 'mesh3d',
data = df_mesh_1,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 1,  6, 0, 4, 0, 3, 6, 0, 3, 4,7),
j = c(3, 5,  4, 2, 0, 1, 6, 3, 1, 2, 5,6),
k = c(1, 7, 0, 6, 5, 5, 7, 2, 3, 0, 7, 4),
facecolor = rep("blue", 12),
opacity = 0.1,
name = "A+/T+/N+ Positive Area",
showlegend = T)
cube <- cube %>%
layout(legend = leg,
scene = list(xaxis = xax, yaxis = yax, zaxis = zax))
cube
}
AdditionalATN(
dat = simulated.data,
xinput = simulated.data$xinput,
yinput = simulated.data$yinput,
zinput = simulated.data$zinput,
XCUT = 656,
YCUT = 58.38,
ZCUT = 303,
leg = LEGEND_1,
xax = axx,
yax = axy,
zax = axz
)
simulated.data <- rep("unselected", nrow(simulated.data))
AdditionalATN <- function(dat, xinput,yinput,zinput,
XCUT,YCUT,ZCUT, leg, xax,yax,zax){
# dat$SCATTERCOL <- rep("unselected", nrow(dat))
for (i in 1:nrow(dat)){
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD"){
dat$SCATTERCOL[i] <- "AD meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change"){
dat$SCATTERCOL[i] <- "Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT &&dat$Burnham_class == "Non-AD pathological Change"){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers"){
dat$SCATTERCOL[i] <- "Normal AD Biomarkers meeting all cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "AD")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")){
dat$SCATTERCOL[i] <- "AD meeting 2 cut offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")){
dat$SCATTERCOL[i] <- "Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Non-AD pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")){
dat$SCATTERCOL[i] <- "Normal AD Biomarker meeting 2 cut-offs"
}
}
dat$SCATTERCOL <- factor(dat$SCATTERCOL, levels = c("unselected",
"AD meeting all cut-offs",
"Pathological Change meeting all cut-offs",
"Non-AD Pathological Change meeting all cut-offs",
"Normal AD Biomarkers meeting all cut-offs",
"AD meeting 2 cut offs",
"Pathological Change meeting 2 cut-offs",
"Non-AD Pathological Change meeting 2 cut-offs",
"Normal AD Biomarker meeting 2 cut-offs"))
df_mesh_1 <- data.frame(X_VAL = c(XCUT,  XCUT,  min(xinput),    min(xinput),    XCUT,   XCUT,   min(xinput),   min(xinput)),
Y_VAL = c(YCUT  ,max(yinput),    YCUT  ,  max(yinput),    YCUT , max(yinput),   YCUT , max(yinput)),
Z_VAL = c(ZCUT  , ZCUT  , ZCUT  , ZCUT  , max(zinput),  max(zinput),  max(zinput),  max(zinput)),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
# Make apoe4 a factor
cube <- plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = dat,
x = ~xinput,
y = ~yinput,
z = ~zinput,
color = ~SCATTERCOL,
colors = c('gray', "firebrick", "darkorange", "gold", "forestgreen","hotpink", "aquamarine", "blueviolet", "darkorchid")) %>%
add_trace(type = 'mesh3d',
data = df_mesh_1,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 1,  6, 0, 4, 0, 3, 6, 0, 3, 4,7),
j = c(3, 5,  4, 2, 0, 1, 6, 3, 1, 2, 5,6),
k = c(1, 7, 0, 6, 5, 5, 7, 2, 3, 0, 7, 4),
facecolor = rep("blue", 12),
opacity = 0.1,
name = "A+/T+/N+ Positive Area",
showlegend = T)
cube <- cube %>%
layout(legend = leg,
scene = list(xaxis = xax, yaxis = yax, zaxis = zax))
cube
}
AdditionalATN(
dat = simulated.data,
xinput = simulated.data$xinput,
yinput = simulated.data$yinput,
zinput = simulated.data$zinput,
XCUT = 656,
YCUT = 58.38,
ZCUT = 303,
leg = LEGEND_1,
xax = axx,
yax = axy,
zax = axz
)
nrow(simulated.data)
source("ScatterPlotFunction.R")
# LOAD ALL FUNCTIONS AND SOURCES
load("simulated_data.RData")
nrow(simulated.data)
simulated.data$SCATTERCOL <- rep("unselected", nrow(simulated.data))
head(simulated.data)
nrow(simulated.data)
AdditionalATN <- function(dat, xinput,yinput,zinput,
XCUT,YCUT,ZCUT, leg, xax,yax,zax){
for (i in 1:nrow(dat)){
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD"){
dat$SCATTERCOL[i] <- "AD meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change"){
dat$SCATTERCOL[i] <- "Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT &&dat$Burnham_class == "Non-AD pathological Change"){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting all cut-offs"
}
if (xinput[i]<=XCUT && yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers"){
dat$SCATTERCOL[i] <- "Normal AD Biomarkers meeting all cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "AD")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "AD")){
dat$SCATTERCOL[i] <- "AD meeting 2 cut offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Pathological Change")){
dat$SCATTERCOL[i] <- "Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Non-AD pathological Change")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Non-AD pathological Change")){
dat$SCATTERCOL[i] <- "Non-AD Pathological Change meeting 2 cut-offs"
}
if ((xinput[i]<=XCUT && yinput[i]>= YCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(xinput[i]<=XCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")||
(yinput[i]>=YCUT && zinput[i]>=ZCUT && dat$Burnham_class == "Normal AD Biomarkers")){
dat$SCATTERCOL[i] <- "Normal AD Biomarker meeting 2 cut-offs"
}
}
dat$SCATTERCOL <- factor(dat$SCATTERCOL, levels = c("unselected",
"AD meeting all cut-offs",
"Pathological Change meeting all cut-offs",
"Non-AD Pathological Change meeting all cut-offs",
"Normal AD Biomarkers meeting all cut-offs",
"AD meeting 2 cut offs",
"Pathological Change meeting 2 cut-offs",
"Non-AD Pathological Change meeting 2 cut-offs",
"Normal AD Biomarker meeting 2 cut-offs"))
df_mesh_1 <- data.frame(X_VAL = c(XCUT,  XCUT,  min(xinput),    min(xinput),    XCUT,   XCUT,   min(xinput),   min(xinput)),
Y_VAL = c(YCUT  ,max(yinput),    YCUT  ,  max(yinput),    YCUT , max(yinput),   YCUT , max(yinput)),
Z_VAL = c(ZCUT  , ZCUT  , ZCUT  , ZCUT  , max(zinput),  max(zinput),  max(zinput),  max(zinput)),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
# Make apoe4 a factor
cube <- plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = dat,
x = ~xinput,
y = ~yinput,
z = ~zinput,
color = ~SCATTERCOL,
colors = c('gray', "firebrick", "darkorange", "gold", "forestgreen","hotpink", "aquamarine", "blueviolet", "darkorchid")) %>%
add_trace(type = 'mesh3d',
data = df_mesh_1,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 1,  6, 0, 4, 0, 3, 6, 0, 3, 4,7),
j = c(3, 5,  4, 2, 0, 1, 6, 3, 1, 2, 5,6),
k = c(1, 7, 0, 6, 5, 5, 7, 2, 3, 0, 7, 4),
facecolor = rep("blue", 12),
opacity = 0.1,
name = "A+/T+/N+ Positive Area",
showlegend = T)
cube <- cube %>%
layout(legend = leg,
scene = list(xaxis = xax, yaxis = yax, zaxis = zax))
cube
}
AdditionalATN(
dat = simulated.data,
xinput = simulated.data$xinput,
yinput = simulated.data$yinput,
zinput = simulated.data$zinput,
XCUT = 656,
YCUT = 58.38,
ZCUT = 303,
leg = LEGEND_1,
xax = axx,
yax = axy,
zax = axz
)
library(shiny)
library(plotly)
ui <- fluidPage(
tags$h2("This is my 3D plot."),
plotlyOutput("Plot3d", width = "1000px", height = "1000px")
)
server <- function(input, output, session){
output$Plot3d <- renderPlotly ({
#Defining data frame for scatter
df_scatter <- data.frame(X_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Y_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Z_VAL = rnorm(50, mean = 0.5, sd = 0.15),
SCATTER_COL = rep("unselected", 50))
#Every point inside of the cube (here cube with lenght 0.5) is labeled "selected"
for (i in 1:nrow(df_scatter)){
if (df_scatter$X_VAL[i] < 0.5 && df_scatter$Y_VAL[i] < 0.5 && df_scatter$Z_VAL[i]< 0.5) {
df_scatter$SCATTER_COL[i] <- "selected"
}
if (df_scatter$X_VAL[i] > 0.75 && df_scatter$Y_VAL[i] > 0.75 && df_scatter$Z_VAL[i]> 0.75){
df_scatter$SCATTER_COL[i] <- "luiiciic"
}
}
df_scatter$SCATTER_COL <- factor(df_scatter$SCATTER_COL, levels = c("selected", "unselected", "luiiciic"))
#Defining data frame for mesh
df_mesh <- data.frame(X_VAL = c(0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5),
Y_VAL = c(0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0),
Z_VAL = c(0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = df_scatter,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
color = ~SCATTER_COL,
colors = c('red', 'grey', "hotpink")) %>%
#Here the trouble starts
add_trace(type = 'mesh3d',
data = df_mesh,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 0, 0, 0, 4, 4, 6, 1, 4, 0, 3, 6),
j = c(3, 4, 1, 2, 5, 6, 5, 2, 0, 1, 6, 3),
k = c(0, 7, 2, 3, 6, 7, 1, 6, 5, 5, 7, 2),
color = ~MESH_COL,
colors = c("blue"),
inherit = FALSE,
opacity = 0.1
)
})
}
shinyApp(ui = ui, server=server)
# ops <- list(dat=dat)
# return(ops)
# df7 <- mutate(dat, scat_col = ifelse(yinput >=YCUT    & xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "AD",
#                                           "AD meeting all cut-offs",
#                                           ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                  "Pathological Change meeting all cut-offs",
#                                                  ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                         "Non-AD Pathological Change meeting all cut-offs",
#                                                         ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                "Normal AD Biomarkers meeting all cut-offs",
#                                                                ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "AD",
#                                                                       "AD meeting 2 cut offs",
#                                                                       ifelse(xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "AD",
#                                                                              "AD meeting 2 cut offs",
#                                                                              ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "AD",
#                                                                                     "AD meeting 2 cut offs",
#                                                                                     ifelse(yinput >=YCUT    & xinput <= XCUT & Burnham_class == "Pathological Change",
#                                                                                            "Pathological Change meeting 2 cut-offs",
#                                                                                            ifelse(xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                                                                   "Pathological Change meeting 2 cut-offs",
#                                                                                                   ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                                                                          "Pathological Change meeting 2 cut-offs",
#                                                                                                          ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "Non-AD pathological Change",
#                                                                                                                 "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                 ifelse(xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                                                                                        "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                        ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                                                                                               "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                               ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                      "Normal AD Biomarker meeting 2 cut-offs",
#                                                                                                                                      ifelse(xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                             "Normal AD Biomarker meeting 2 cut-offs",
#                                                                                                                                             ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                                    "Normal AD Biomarker meeting 2 cut-offs","unselected")))))))))))))))))
#
#
library(shiny)
library(plotly)
ui <- fluidPage(
tags$h2("This is my 3D plot."),
plotlyOutput("Plot3d", width = "1000px", height = "1000px")
)
server <- function(input, output, session){
output$Plot3d <- renderPlotly ({
#Defining data frame for scatter
df_scatter <- data.frame(X_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Y_VAL = rnorm(50, mean = 0.5, sd = 0.15),
Z_VAL = rnorm(50, mean = 0.5, sd = 0.15),
SCATTER_COL = rep("unselected", 50))
#Every point inside of the cube (here cube with lenght 0.5) is labeled "selected"
for (i in 1:nrow(df_scatter)){
if (df_scatter$X_VAL[i] < 0.5 && df_scatter$Y_VAL[i] < 0.5 && df_scatter$Z_VAL[i]< 0.5) {
df_scatter$SCATTER_COL[i] <- "selected"
}
if (df_scatter$X_VAL[i] > 0.75 && df_scatter$Y_VAL[i] > 0.75 && df_scatter$Z_VAL[i]> 0.75){
df_scatter$SCATTER_COL[i] <- "luiiciic"
}
}
df_scatter$SCATTER_COL <- factor(df_scatter$SCATTER_COL, levels = c("selected", "unselected", "luiiciic"))
#Defining data frame for mesh
df_mesh <- data.frame(X_VAL = c(0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5),
Y_VAL = c(0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0),
Z_VAL = c(0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5),
MESH_COL = factor(rep("CUBE", 8), levels = c("CUBE")))
plot_ly()%>%
add_markers(type = "scatter3d",
mode = "markers",
data = df_scatter,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
color = ~SCATTER_COL,
colors = c('red', 'grey', "hotpink")) %>%
#Here the trouble starts
add_trace(type = 'mesh3d',
data = df_mesh,
x = ~X_VAL,
y = ~Y_VAL,
z = ~Z_VAL,
i = c(7, 0, 0, 0, 4, 4, 6, 1, 4, 0, 3, 6),
j = c(3, 4, 1, 2, 5, 6, 5, 2, 0, 1, 6, 3),
k = c(0, 7, 2, 3, 6, 7, 1, 6, 5, 5, 7, 2),
color = ~MESH_COL,
facecolor = c("blue"),
inherit = FALSE,
opacity = 0.1
)
})
}
shinyApp(ui = ui, server=server)
# ops <- list(dat=dat)
# return(ops)
# df7 <- mutate(dat, scat_col = ifelse(yinput >=YCUT    & xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "AD",
#                                           "AD meeting all cut-offs",
#                                           ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                  "Pathological Change meeting all cut-offs",
#                                                  ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                         "Non-AD Pathological Change meeting all cut-offs",
#                                                         ifelse(yinput >=YCUT    & xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                "Normal AD Biomarkers meeting all cut-offs",
#                                                                ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "AD",
#                                                                       "AD meeting 2 cut offs",
#                                                                       ifelse(xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "AD",
#                                                                              "AD meeting 2 cut offs",
#                                                                              ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "AD",
#                                                                                     "AD meeting 2 cut offs",
#                                                                                     ifelse(yinput >=YCUT    & xinput <= XCUT & Burnham_class == "Pathological Change",
#                                                                                            "Pathological Change meeting 2 cut-offs",
#                                                                                            ifelse(xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                                                                   "Pathological Change meeting 2 cut-offs",
#                                                                                                   ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Pathological Change",
#                                                                                                          "Pathological Change meeting 2 cut-offs",
#                                                                                                          ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "Non-AD pathological Change",
#                                                                                                                 "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                 ifelse(xinput <=XCUT & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                                                                                        "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                        ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Non-AD pathological Change",
#                                                                                                                               "Non-AD Pathological Change meeting 2 cut-offs",
#                                                                                                                               ifelse(yinput >=YCUT    & xinput <=XCUT & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                      "Normal AD Biomarker meeting 2 cut-offs",
#                                                                                                                                      ifelse(xinput <= XCUT & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                             "Normal AD Biomarker meeting 2 cut-offs",
#                                                                                                                                             ifelse(yinput >=YCUT   & zinput >=ZCUT  & Burnham_class == "Normal AD Biomarkers",
#                                                                                                                                                    "Normal AD Biomarker meeting 2 cut-offs","unselected")))))))))))))))))
#
#
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
